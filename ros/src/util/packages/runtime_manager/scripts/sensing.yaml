name : Drivers
subs :
  - name : Cameras
    subs :
      - name : PointGrey Grasshoper 3 (USB1)
        probe: 'lsusb -d 1e10: > /dev/null'
        run  : roslaunch pointgrey grasshopper3.launch
      - name : PointGrey Grasshoper 3 (USB2)
        probe:
        run  :
      - name : PointGrey LadyBug 5
        probe:
        run  :
      - name : USB Generic
        probe: 'lsusb -v | grep wTerminalType | grep "Camera Sensor" > /dev/null'
        run  : rosrun uvc_camera uvc_camera_node
      - name : IEEE1394
        probe:
        run  :

  - name : GNSS
    subs :
      - name : Javad Delta 3 (TTY1)
        probe: 'lsusb -d 0584: > /dev/null' # probed if serial converter is connected
        run  : rosrun javad gnss.sh

  - name : IMU
    subs :
      - name : Crossbow vg440
        probe:
        run  :

  - name : LIDARs
    subs :
      - name : Velodyne HDL-64e
        probe: 'ifconfig eth0 | grep "192.168.1.105" > /dev/null'
        run  : roslaunch velodyne velodyne_hdl64e.launch
        param: calibration_path
        gui  :
          calibration :
            prop  : 1
            flags : [ center_v ]
      - name : Velodyne HDL-32e
        probe: 'ping -c 1 -W 1 192.168.1.201 > /dev/null'
        run  : roslaunch velodyne velodyne_hdl32e.launch
        param: calibration_path
        gui  :
          calibration :
            prop  : 1
            flags : [ center_v ]
      - name : Hokuyo UTM30LX (USB1)
        probe: 'lsusb -d 15d1: > /dev/null'
        run  : roslaunch hokuyo hokuyo_utm30lx.launch
      - name : Hokuyo UTM30LX (USB2)
        probe:
        run  :
      - name : SICK LMS511
        probe:
        run  :
      - name : IBEO 8L Single
        probe:
        run  :

  - name : Other Sensors
    subs :
      - name : XXXX (TTY1)
        probe: 'true'
        run  : rosrun turtlesim turtlesim_node # for debug

selector :
  calibration :
    sel : self.modal_dialog( (('LIDAR2D', [2]), ('LIDAR3D', [3])), 'Calibration' )
    2   : calib_2d
    3   : calib_3d

buttons:
  sensor_fusion :
    run   : roslaunch sensing_fusions sensing_fusions.launch
    param : sensor_fusion
    gui   :
      dir :
        func    : self.text_ctrl_dir_sensor_fusion.GetValue()
        restore : 'lambda v, tc=self.text_ctrl_dir_sensor_fusion : set_path(tc, v)'
      ext_toggle_enables :
      - self.text_ctrl_dir_sensor_fusion
      - self.button_ref_dir_sensor_fusion

  calib_2d :
    run   : roslaunch camera_lidar2d camera_lidar2d_offline_calib.launch
    param : sensor_fusion
    gui   :
      dir  :
        func : self.text_ctrl_dir_sensor_fusion.GetValue()
      ext_toggle_enables :
      - self.text_ctrl_dir_sensor_fusion
      - self.button_ref_dir_sensor_fusion

  calib_3d :
    run   : rosrun camera_lidar3d camera_lidar3d_offline_calib

  tf :
    run   : roslaunch
    param : tf
    gui   :
      file :
        func    : self.text_ctrl_file_tf.GetValue()
        restore : 'lambda v, tc=self.text_ctrl_file_tf : set_path(tc, v)'
      ext_toggle_enables :
      - self.text_ctrl_file_tf
      - self.button_ref_file_tf

params :
  - name  : calibration_path
    vars  :
    - name  : calibration
      kind  : path
      v     : ''
      cmd_param :
        dash : ''
        delim: ':='

  - name  : sensor_fusion
    vars  :
    - name      : dir
      kind      : path
      path_type : dir
      v         : ''
      cmd_param :
        dash : ''
        delim : ':='

  - name  : tf
    vars  :
    - name      : file
      kind      : path
      v         : ''
      cmd_param :
        delim     : ''
        default   : runtime_manager tf.launch
