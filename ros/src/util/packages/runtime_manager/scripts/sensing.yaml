name : Drivers
subs :
  - name : Cameras
    subs :
      - name : PointGrey Grasshoper 3 (USB1)
        probe: 'lsusb -d 1e10: > /dev/null'
        run  : roslaunch pointgrey grasshopper3.launch
      - name : PointGrey Grasshoper 3 (USB2)
        probe:
        run  :
      - name : PointGrey LadyBug 5
        probe:
        run  :
      - name : USB Generic
        probe: 'lsusb -v | grep wTerminalType | grep "Camera Sensor" > /dev/null'
        run  : rosrun uvc_camera uvc_camera_node
      - name : IEEE1394
        probe:
        run  :

  - name : GNSS
    subs :
      - name : Javad Delta 3 (TTY1)
        probe: 'lsusb -d 0584: > /dev/null' # probed if serial converter is connected
        run  : rosrun javad gnss.sh

  - name : IMU
    subs :
      - name : Crossbow vg440
        probe:
        run  :

  - name : LIDARs
    subs :
      - name : Velodyne HDL-64e
        probe: 'ifconfig eth0 | grep "192.168.1.105" > /dev/null'
        run  : roslaunch velodyne velodyne_hdl64e.launch
        path : calibration
      - name : Velodyne HDL-32e
        probe: 'ping -c 1 -W 1 192.168.1.201 > /dev/null'
        run  : roslaunch velodyne velodyne_hdl32e.launch
        path : calibration
      - name : Hokuyo UTM30LX (USB1)
        probe: 'lsusb -d 15d1: > /dev/null'
        run  : roslaunch hokuyo hokuyo_utm30lx.launch
      - name : Hokuyo UTM30LX (USB2)
        probe:
        run  :
      - name : SICK LMS511
        probe:
        run  :
      - name : IBEO 8L Single
        probe:
        run  :

  - name : Other Sensors
    subs :
      - name : XXXX (TTY1)
        probe: 'true'
        run  : rosrun turtlesim turtlesim_node # for debug

buttons:
  fusion :
    run : "'roslaunch sensing_fusions sensing_fusions.launch dir:=$'.replace('$', add_args[0])"
  rosbag :
    run :
  calibration :
    run :
      - [ LIDAR2D , "'roslaunch camera_lidar2d camera_lidar2d_offline_calib.launch dir:=$'.replace('$', add_args[0])" ]
      - [ LIDAR3D , "rosrun camera_lidar3d camera_lidar3d_offline_calib" ]
  tf :
    run : roslaunch runtime_manager tf.launch
  rviz :
    run : rosrun rviz rviz
