#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Thu Jun 11 14:21:34 2015
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyFrame.__init__
		kwds["style"] = wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.notebook_1 = wx.Notebook(self, wx.ID_ANY, style=0)
		self.notebook_1_pane_1 = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.bitmap_tablet = wx.StaticBitmap(self.notebook_1_pane_1, wx.ID_ANY, wx.NullBitmap)
		self.bitmap_mobile = wx.StaticBitmap(self.notebook_1_pane_1, wx.ID_ANY, wx.NullBitmap)
		self.bitmap_vehicle = wx.StaticBitmap(self.notebook_1_pane_1, wx.ID_ANY, wx.NullBitmap)
		self.bitmap_database = wx.StaticBitmap(self.notebook_1_pane_1, wx.ID_ANY, wx.NullBitmap)
		self.label_9 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Tablet UI"))
		self.label_9_copy = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Mobile UI"))
		self.label_9_copy_1 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Vehicle Control"))
		self.label_9_copy_2 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Database Access"))
		self.button_tablet = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Active"))
		self.button_mobile = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Active"))
		self.button_vehicle = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Active"))
		self.button_database = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Active"))
		self.sizer_50_staticbox = wx.StaticBox(self.notebook_1_pane_1, wx.ID_ANY, _("Network Connection"))
		self.button_statchk_d = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("D"))
		self.button_statchk_r = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("R"))
		self.button_statchk_b = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("B"))
		self.button_statchk_n = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("N"))
		self.button_statchk_prog = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Program"))
		self.button_statchk_manu = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Manual"))
		self.label_12 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Indicator"))
		self.button_statchk_indi_l = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("L"))
		self.button_statchk_indi_r = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("R"))
		self.panel_main_cc = wx.Panel(self.notebook_1_pane_1, wx.ID_ANY)
		self.sizer_65_staticbox = wx.StaticBox(self.notebook_1_pane_1, wx.ID_ANY, _("Control Check"))
		self.text_ctrl_way_point = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
		self.text_ctrl_point_cloud = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
		self.text_ctrl_vector_map = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
		self.text_ctrl_area_list = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "")
		self.button_ref_way_point = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Ref"))
		self.button_ref_point_cloud = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Ref"))
		self.button_ref_vector_map = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Ref"))
		self.button_ref_area_list = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Ref"))
		self.checkbox_auto_update = wx.CheckBox(self.notebook_1_pane_1, wx.ID_ANY, _("Auto Update"))
		self.choice_scene_num = wx.Choice(self.notebook_1_pane_1, wx.ID_ANY, choices=[_("1x1"), _("3x3"), _("5x5"), _("7x7"), _("9x9")])
		self.checkbox_auto_ignore_db = wx.CheckBox(self.notebook_1_pane_1, wx.ID_ANY, _("Ignore DB"))
		self.checkbox_auto_ignore_navi = wx.CheckBox(self.notebook_1_pane_1, wx.ID_ANY, _("IgnoreNavi"))
		self.button_load_map = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Map"))
		self.sizer_55_staticbox = wx.StaticBox(self.notebook_1_pane_1, wx.ID_ANY, _("Route and Map"))
		self.text_ctrl_main_tf = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.button_ref_main_tf = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Ref"))
		self.text_ctrl_main_rosbag_play = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.button_ref_main_rosbag_play = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Ref"))
		self.label_4_copy = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Rate"))
		self.text_ctrl_rate_main_rosbag_play = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.checkbox_clock_main_rosbag_play = wx.CheckBox(self.notebook_1_pane_1, wx.ID_ANY, _("Clock"))
		self.checkbox_main_sim_time = wx.CheckBox(self.notebook_1_pane_1, wx.ID_ANY, _("Simulation Time"))
		self.button_main_tf = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("TF"))
		self.button_launch_main_rosbag_play = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Play"))
		self.button_kill_main_rosbag_play = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Stop"))
		self.button_pause_main_rosbag_play = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Pause"))
		self.button_main_rosbag_record = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Record"))
		self.sizer_19_staticbox = wx.StaticBox(self.notebook_1_pane_1, wx.ID_ANY, _("ROS"))
		self.button_sensor = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Sensor"))
		self.button_map = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Map"))
		self.button_perception = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Perception"))
		self.button_planning = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Planning"))
		self.button_control = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Control"))
		self.label_gnss_stat = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("GNSS"))
		self.label_map_stat = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("MAP"))
		self.label_ndt_stat = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("NDT"))
		self.label_lf_stat = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Lane Follow"))
		self.button_drive = wx.ToggleButton(self.notebook_1_pane_1, wx.ID_ANY, _("Drive"))
		self.button_clear = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, _("Clear"))
		self.notebook_1_pane_2 = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.notebook_1_pane_3 = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.tree_ctrl_0 = wx.TreeCtrl(self.notebook_1_pane_3, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.tree_ctrl_1 = wx.TreeCtrl(self.notebook_1_pane_3, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.tree_ctrl_2 = wx.TreeCtrl(self.notebook_1_pane_3, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.button_refresh = wx.Button(self.notebook_1_pane_3, wx.ID_ANY, _("Refresh"))
		self.notebook_1_pane_4 = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.tree_ctrl_data = wx.TreeCtrl(self.notebook_1_pane_4, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_NO_LINES | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
		self.button_refresh_data = wx.Button(self.notebook_1_pane_4, wx.ID_ANY, _("Refresh"))
		self.text_ctrl_query = wx.TextCtrl(self.notebook_1_pane_4, wx.ID_ANY, _("sentence"))
		self.button_query = wx.Button(self.notebook_1_pane_4, wx.ID_ANY, _("Query"))
		self.list_ctrl_sql = wx.ListCtrl(self.notebook_1_pane_4, wx.ID_ANY, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
		self.notebook_1_pane_5 = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_sensing = wx.ScrolledWindow(self.notebook_1_pane_5, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.checkbox_auto_probe = wx.CheckBox(self.notebook_1_pane_5, wx.ID_ANY, _("Auto Probe"))
		self.button_probe = wx.Button(self.notebook_1_pane_5, wx.ID_ANY, _("Refresh"))
		self.button_calibration = wx.ToggleButton(self.notebook_1_pane_5, wx.ID_ANY, _("Calibration Tool Kit"))
		self.panel_points_image = wx.Panel(self.notebook_1_pane_5, wx.ID_ANY)
		self.button_points_image = wx.ToggleButton(self.notebook_1_pane_5, wx.ID_ANY, _("Points Image"))
		self.panel_scan_image = wx.Panel(self.notebook_1_pane_5, wx.ID_ANY)
		self.button_scan_image = wx.ToggleButton(self.notebook_1_pane_5, wx.ID_ANY, _("Scan Image"))
		self.panel_virtual_scan_image = wx.Panel(self.notebook_1_pane_5, wx.ID_ANY)
		self.button_virtual_scan_image = wx.ToggleButton(self.notebook_1_pane_5, wx.ID_ANY, _("Virtual Scan Image"))
		self.panel_camera_extrinsicMat_Publisher = wx.Panel(self.notebook_1_pane_5, wx.ID_ANY)
		self.button_camera_extrinsicMat_Publisher = wx.ToggleButton(self.notebook_1_pane_5, wx.ID_ANY, _("camera extrinsicMat Publisher"))
		self.sizer_7_staticbox = wx.StaticBox(self.notebook_1_pane_5, wx.ID_ANY, _("Sensor Fusion"))
		self.tab_simulation = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_simulation = wx.ScrolledWindow(self.tab_simulation, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.checkbox_point_map_update = wx.CheckBox(self.tab_simulation, wx.ID_ANY, _("Point Map Update"))
		self.panel_3 = wx.ScrolledWindow(self.tab_simulation, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.button_launch_rosbag_record = wx.Button(self.panel_3, wx.ID_ANY, _("ROSBAG Record"))
		self.text_ctrl_file_rosbag_play = wx.TextCtrl(self.panel_3, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.button_ref_file_rosbag_play = wx.Button(self.panel_3, wx.ID_ANY, _("Ref"))
		self.button_launch_rosbag_play = wx.Button(self.panel_3, wx.ID_ANY, _("ROSBAG Play"))
		self.button_kill_rosbag_play = wx.Button(self.panel_3, wx.ID_ANY, _("Kill"))
		self.button_pause_rosbag_play = wx.Button(self.panel_3, wx.ID_ANY, _("Pause"))
		self.label_4 = wx.StaticText(self.panel_3, wx.ID_ANY, _("Rate"))
		self.text_ctrl_rate_rosbag_play = wx.TextCtrl(self.panel_3, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.checkbox_clock_rosbag_play = wx.CheckBox(self.panel_3, wx.ID_ANY, _("Clock"))
		self.checkbox_sim_time = wx.CheckBox(self.panel_3, wx.ID_ANY, _("Simulation Time"))
		self.sizer_25_copy_copy_staticbox = wx.StaticBox(self.panel_3, wx.ID_ANY, "")
		self.text_ctrl_pmap = wx.TextCtrl(self.panel_3, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.button_ref_pmap = wx.Button(self.panel_3, wx.ID_ANY, _("Ref"))
		self.button_launch_pmap = wx.Button(self.panel_3, wx.ID_ANY, _("Point Map"))
		self.button_kill_pmap = wx.Button(self.panel_3, wx.ID_ANY, _("Kill"))
		self.sizer_25_copy_copy_copy_staticbox = wx.StaticBox(self.panel_3, wx.ID_ANY, "")
		self.panel_vmap_prm = wx.Panel(self.panel_3, wx.ID_ANY)
		self.button_launch_vmap = wx.Button(self.panel_3, wx.ID_ANY, _("Vector Map"))
		self.button_kill_vmap = wx.Button(self.panel_3, wx.ID_ANY, _("Kill"))
		self.sizer_25_copy_copy_copy_copy_staticbox = wx.StaticBox(self.panel_3, wx.ID_ANY, "")
		self.panel_trajectory_prm = wx.Panel(self.panel_3, wx.ID_ANY)
		self.button_launch_trajectory = wx.Button(self.panel_3, wx.ID_ANY, _("Trajectory"))
		self.button_kill_trajectory = wx.Button(self.panel_3, wx.ID_ANY, _("Kill"))
		self.sizer_25_copy_copy_copy_copy_copy_copy_staticbox = wx.StaticBox(self.panel_3, wx.ID_ANY, "")
		self.tab_viewer = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.panel_viewer = wx.ScrolledWindow(self.tab_viewer, wx.ID_ANY, style=wx.TAB_TRAVERSAL)

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnNetConn, self.button_tablet)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnNetConn, self.button_mobile)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnNetConn, self.button_vehicle)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnNetConn, self.button_database)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_d)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_r)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_b)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnGear, self.button_statchk_n)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnProgManu, self.button_statchk_prog)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnProgManu, self.button_statchk_manu)
		self.Bind(wx.EVT_BUTTON, self.OnIndi, self.button_statchk_indi_l)
		self.Bind(wx.EVT_BUTTON, self.OnIndi, self.button_statchk_indi_r)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_way_point)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_point_cloud)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_vector_map)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_area_list)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLoadMap, self.button_load_map)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_main_tf)
		self.Bind(wx.EVT_TEXT_ENTER, self.OnAliasSync, self.text_ctrl_main_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_main_rosbag_play)
		self.Bind(wx.EVT_TEXT_ENTER, self.OnAliasSync, self.text_ctrl_rate_main_rosbag_play)
		self.Bind(wx.EVT_CHECKBOX, self.OnAliasSync, self.checkbox_clock_main_rosbag_play)
		self.Bind(wx.EVT_CHECKBOX, self.OnSimTime, self.checkbox_main_sim_time)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_main_tf)
		self.Bind(wx.EVT_BUTTON, self.OnLaunch, self.button_launch_main_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnKill, self.button_kill_main_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnPauseRosbagPlay, self.button_pause_main_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnRosbagRecord, self.button_main_rosbag_record)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMainButton, self.button_sensor)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMainButton, self.button_map)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMainButton, self.button_perception)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMainButton, self.button_planning)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMainButton, self.button_control)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnDrive, self.button_drive)
		self.Bind(wx.EVT_BUTTON, self.OnClear, self.button_clear)
		self.Bind(wx.EVT_BUTTON, self.OnRefresh, self.button_refresh)
		self.Bind(wx.EVT_BUTTON, self.OnRefresh, self.button_refresh_data)
		self.Bind(wx.EVT_BUTTON, self.OnQuery, self.button_query)
		self.Bind(wx.EVT_CHECKBOX, self.OnAutoProbe, self.checkbox_auto_probe)
		self.Bind(wx.EVT_BUTTON, self.OnProbe, self.button_probe)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_calibration)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_points_image)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_scan_image)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_virtual_scan_image)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnLaunchKill, self.button_camera_extrinsicMat_Publisher)
		self.Bind(wx.EVT_CHECKBOX, self.OnPointMapUpdate, self.checkbox_point_map_update)
		self.Bind(wx.EVT_BUTTON, self.OnRosbagRecord, self.button_launch_rosbag_record)
		self.Bind(wx.EVT_TEXT_ENTER, self.OnAliasSync, self.text_ctrl_file_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_file_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnLaunch, self.button_launch_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnKill, self.button_kill_rosbag_play)
		self.Bind(wx.EVT_BUTTON, self.OnPauseRosbagPlay, self.button_pause_rosbag_play)
		self.Bind(wx.EVT_TEXT_ENTER, self.OnAliasSync, self.text_ctrl_rate_rosbag_play)
		self.Bind(wx.EVT_CHECKBOX, self.OnAliasSync, self.checkbox_clock_rosbag_play)
		self.Bind(wx.EVT_CHECKBOX, self.OnSimTime, self.checkbox_sim_time)
		self.Bind(wx.EVT_TEXT_ENTER, self.OnAliasSync, self.text_ctrl_pmap)
		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_pmap)
		self.Bind(wx.EVT_BUTTON, self.OnLaunchPmap, self.button_launch_pmap)
		self.Bind(wx.EVT_BUTTON, self.OnKillPmap, self.button_kill_pmap)
		self.Bind(wx.EVT_BUTTON, self.OnLaunch, self.button_launch_vmap)
		self.Bind(wx.EVT_BUTTON, self.OnKill, self.button_kill_vmap)
		self.Bind(wx.EVT_BUTTON, self.OnLaunch, self.button_launch_trajectory)
		self.Bind(wx.EVT_BUTTON, self.OnKill, self.button_kill_trajectory)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyFrame.__set_properties
		self.SetTitle(_("runtime manager"))
		self.button_tablet.SetMinSize((60, 29))
		self.button_mobile.SetMinSize((60, 29))
		self.button_vehicle.SetMinSize((60, 29))
		self.button_database.SetMinSize((60, 29))
		self.button_statchk_d.SetMinSize((29, 29))
		self.button_statchk_r.SetMinSize((29, 29))
		self.button_statchk_b.SetMinSize((29, 29))
		self.button_statchk_b.SetValue(1)
		self.button_statchk_n.SetMinSize((29, 29))
		self.button_statchk_manu.SetValue(1)
		self.button_statchk_indi_l.SetMinSize((40, 29))
		self.button_statchk_indi_r.SetMinSize((40, 29))
		self.text_ctrl_way_point.SetMinSize((80, 27))
		self.text_ctrl_point_cloud.SetMinSize((80, 27))
		self.text_ctrl_vector_map.SetMinSize((80, 27))
		self.text_ctrl_area_list.SetMinSize((80, 27))
		self.button_ref_way_point.SetMinSize((40, 29))
		self.button_ref_point_cloud.SetMinSize((40, 29))
		self.button_ref_vector_map.SetMinSize((40, 29))
		self.button_ref_area_list.SetMinSize((40, 29))
		self.choice_scene_num.SetSelection(0)
		self.text_ctrl_main_tf.SetMinSize((250, 27))
		self.button_ref_main_tf.SetMinSize((40, 29))
		self.text_ctrl_main_rosbag_play.SetMinSize((250, 27))
		self.button_ref_main_rosbag_play.SetMinSize((40, 29))
		self.button_launch_main_rosbag_play.SetMinSize((50, 29))
		self.button_kill_main_rosbag_play.SetMinSize((50, 29))
		self.button_kill_main_rosbag_play.Enable(False)
		self.button_pause_main_rosbag_play.SetMinSize((50, 29))
		self.button_pause_main_rosbag_play.Enable(False)
		self.label_gnss_stat.Enable(False)
		self.label_map_stat.Enable(False)
		self.label_ndt_stat.Enable(False)
		self.label_lf_stat.Enable(False)
		self.notebook_1_pane_2.Hide()
		self.panel_sensing.SetMinSize((400, 487))
		self.panel_sensing.SetScrollRate(10, 10)
		self.checkbox_auto_probe.Hide()
		self.panel_simulation.SetScrollRate(10, 10)
		self.button_ref_file_rosbag_play.SetMinSize((40, 29))
		self.button_kill_rosbag_play.SetMinSize((40, 29))
		self.button_kill_rosbag_play.Enable(False)
		self.button_pause_rosbag_play.SetMinSize((60, 29))
		self.button_pause_rosbag_play.Enable(False)
		self.checkbox_clock_rosbag_play.SetForegroundColour(wx.Colour(76, 76, 76))
		self.button_ref_pmap.SetMinSize((40, 29))
		self.button_kill_pmap.SetMinSize((40, 29))
		self.button_kill_pmap.Enable(False)
		self.button_kill_vmap.SetMinSize((40, 29))
		self.button_kill_vmap.Enable(False)
		self.button_kill_trajectory.SetMinSize((40, 29))
		self.button_kill_trajectory.Enable(False)
		self.panel_3.SetMinSize((250, -1))
		self.panel_3.SetScrollRate(10, 10)
		self.panel_viewer.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyFrame.__do_layout
		self.sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_26 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_viewer = wx.BoxSizer(wx.HORIZONTAL)
		sizer_5_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_7_copy = wx.BoxSizer(wx.VERTICAL)
		self.sizer_25_copy_copy_copy_copy_copy_copy_staticbox.Lower()
		sizer_25_copy_copy_copy_copy_copy_copy = wx.StaticBoxSizer(self.sizer_25_copy_copy_copy_copy_copy_copy_staticbox, wx.VERTICAL)
		sizer_8_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_copy_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_25_copy_copy_copy_copy_staticbox.Lower()
		sizer_25_copy_copy_copy_copy = wx.StaticBoxSizer(self.sizer_25_copy_copy_copy_copy_staticbox, wx.VERTICAL)
		sizer_8_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_25_copy_copy_copy_staticbox.Lower()
		sizer_25_copy_copy_copy = wx.StaticBoxSizer(self.sizer_25_copy_copy_copy_staticbox, wx.VERTICAL)
		sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_25_copy_copy_staticbox.Lower()
		sizer_25_copy_copy = wx.StaticBoxSizer(self.sizer_25_copy_copy_staticbox, wx.VERTICAL)
		sizer_8_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_8_copy_3 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_9 = wx.BoxSizer(wx.VERTICAL)
		sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_7_staticbox.Lower()
		sizer_7 = wx.StaticBoxSizer(self.sizer_7_staticbox, wx.VERTICAL)
		sizer_25_copy_copy_2 = wx.BoxSizer(wx.VERTICAL)
		sizer_25_copy_copy_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_25_copy = wx.BoxSizer(wx.VERTICAL)
		sizer_25 = wx.BoxSizer(wx.VERTICAL)
		sizer_33 = wx.BoxSizer(wx.VERTICAL)
		sizer_24 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_17 = wx.BoxSizer(wx.VERTICAL)
		sizer_18 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_12 = wx.BoxSizer(wx.VERTICAL)
		sizer_10 = wx.BoxSizer(wx.VERTICAL)
		sizer_27 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_4 = wx.BoxSizer(wx.VERTICAL)
		sizer_43 = wx.BoxSizer(wx.VERTICAL)
		sizer_47 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_58_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_20 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_58 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_19_staticbox.Lower()
		sizer_19 = wx.StaticBoxSizer(self.sizer_19_staticbox, wx.HORIZONTAL)
		sizer_37 = wx.BoxSizer(wx.VERTICAL)
		sizer_29 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_34 = wx.BoxSizer(wx.VERTICAL)
		sizer_8_copy_3_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_36 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_35 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_55_staticbox.Lower()
		sizer_55 = wx.StaticBoxSizer(self.sizer_55_staticbox, wx.HORIZONTAL)
		sizer_56 = wx.BoxSizer(wx.VERTICAL)
		sizer_32 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_57 = wx.BoxSizer(wx.VERTICAL)
		sizer_23 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_39 = wx.BoxSizer(wx.VERTICAL)
		sizer_38 = wx.BoxSizer(wx.VERTICAL)
		sizer_28 = wx.BoxSizer(wx.VERTICAL)
		sizer_46 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_65_staticbox.Lower()
		sizer_65 = wx.StaticBoxSizer(self.sizer_65_staticbox, wx.HORIZONTAL)
		sizer_67 = wx.BoxSizer(wx.VERTICAL)
		sizer_54 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_22 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_66 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_50_staticbox.Lower()
		sizer_50 = wx.StaticBoxSizer(self.sizer_50_staticbox, wx.HORIZONTAL)
		sizer_40_copy_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_40_copy = wx.BoxSizer(wx.VERTICAL)
		sizer_40 = wx.BoxSizer(wx.VERTICAL)
		sizer_42_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_42_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_42_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_42 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_42.Add(self.bitmap_tablet, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_40.Add(sizer_42, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_42_copy.Add(self.bitmap_mobile, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_40.Add(sizer_42_copy, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_42_copy_1.Add(self.bitmap_vehicle, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_40.Add(sizer_42_copy_1, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_42_copy_2.Add(self.bitmap_database, 1, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_40.Add(sizer_42_copy_2, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_50.Add(sizer_40, 0, wx.EXPAND, 0)
		sizer_40_copy.Add(self.label_9, 0, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 12)
		sizer_40_copy.Add(self.label_9_copy, 0, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 12)
		sizer_40_copy.Add(self.label_9_copy_1, 0, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 12)
		sizer_40_copy.Add(self.label_9_copy_2, 0, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 12)
		sizer_50.Add(sizer_40_copy, 1, wx.EXPAND, 0)
		sizer_40_copy_1.Add(self.button_tablet, 1, wx.ALL, 2)
		sizer_40_copy_1.Add(self.button_mobile, 1, wx.ALL, 2)
		sizer_40_copy_1.Add(self.button_vehicle, 1, wx.ALL, 2)
		sizer_40_copy_1.Add(self.button_database, 1, wx.ALL, 2)
		sizer_50.Add(sizer_40_copy_1, 0, wx.EXPAND, 0)
		sizer_46.Add(sizer_50, 0, wx.ALL | wx.EXPAND, 4)
		sizer_66.Add(self.button_statchk_d, 1, wx.EXPAND, 0)
		sizer_66.Add(self.button_statchk_r, 1, wx.EXPAND, 0)
		sizer_66.Add(self.button_statchk_b, 1, wx.EXPAND, 0)
		sizer_66.Add(self.button_statchk_n, 1, wx.EXPAND, 0)
		sizer_65.Add(sizer_66, 0, wx.ALL | wx.EXPAND, 4)
		sizer_67.Add(self.button_statchk_prog, 1, 0, 0)
		sizer_67.Add(self.button_statchk_manu, 1, 0, 0)
		sizer_22.Add(self.label_12, 1, wx.ALIGN_BOTTOM, 0)
		sizer_67.Add(sizer_22, 1, wx.EXPAND, 0)
		sizer_54.Add(self.button_statchk_indi_l, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_54.Add(self.button_statchk_indi_r, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_67.Add(sizer_54, 1, wx.EXPAND, 0)
		sizer_65.Add(sizer_67, 0, wx.ALL | wx.EXPAND, 4)
		sizer_65.Add(self.panel_main_cc, 1, wx.EXPAND, 0)
		sizer_46.Add(sizer_65, 1, wx.ALL | wx.EXPAND, 4)
		sizer_43.Add(sizer_46, 0, wx.EXPAND, 0)
		label_10_copy_3 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Way Point:"))
		sizer_28.Add(label_10_copy_3, 0, wx.ALL, 6)
		label_10 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Point Cloud:"))
		sizer_28.Add(label_10, 0, wx.ALL, 6)
		label_10_copy = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Vector Map:"))
		sizer_28.Add(label_10_copy, 0, wx.ALL, 6)
		label_10_copy_1 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Area List:"))
		sizer_28.Add(label_10_copy_1, 0, wx.ALL, 6)
		sizer_23.Add(sizer_28, 0, wx.EXPAND, 0)
		sizer_38.Add(self.text_ctrl_way_point, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 2)
		sizer_38.Add(self.text_ctrl_point_cloud, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 2)
		sizer_38.Add(self.text_ctrl_vector_map, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 2)
		sizer_38.Add(self.text_ctrl_area_list, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 2)
		sizer_23.Add(sizer_38, 1, wx.EXPAND, 0)
		sizer_39.Add(self.button_ref_way_point, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 1)
		sizer_39.Add(self.button_ref_point_cloud, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 1)
		sizer_39.Add(self.button_ref_vector_map, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 1)
		sizer_39.Add(self.button_ref_area_list, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 1)
		sizer_23.Add(sizer_39, 0, wx.EXPAND, 0)
		sizer_57.Add(sizer_23, 1, wx.EXPAND, 0)
		sizer_55.Add(sizer_57, 1, wx.EXPAND, 0)
		sizer_32.Add(self.checkbox_auto_update, 1, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_32.Add(self.choice_scene_num, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_56.Add(sizer_32, 0, wx.EXPAND, 0)
		sizer_56.Add(self.checkbox_auto_ignore_db, 0, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_56.Add(self.checkbox_auto_ignore_navi, 0, wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_56.Add(self.button_load_map, 0, wx.TOP | wx.BOTTOM | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_55.Add(sizer_56, 0, wx.LEFT | wx.EXPAND, 4)
		sizer_43.Add(sizer_55, 0, wx.ALL | wx.EXPAND, 4)
		label_10_copy_2 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("Transform:"))
		sizer_35.Add(label_10_copy_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_35.Add(self.text_ctrl_main_tf, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_35.Add(self.button_ref_main_tf, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_34.Add(sizer_35, 1, wx.EXPAND, 0)
		label_10_copy_2_copy = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, _("ROSBAG:"))
		sizer_36.Add(label_10_copy_2_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_36.Add(self.text_ctrl_main_rosbag_play, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_36.Add(self.button_ref_main_rosbag_play, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_34.Add(sizer_36, 1, wx.EXPAND, 0)
		sizer_8_copy_3_copy.Add(self.label_4_copy, 0, wx.LEFT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_8_copy_3_copy.Add(self.text_ctrl_rate_main_rosbag_play, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_8_copy_3_copy.Add(self.checkbox_clock_main_rosbag_play, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_8_copy_3_copy.Add(self.checkbox_main_sim_time, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_34.Add(sizer_8_copy_3_copy, 0, wx.EXPAND, 0)
		sizer_19.Add(sizer_34, 1, wx.EXPAND, 0)
		sizer_37.Add(self.button_main_tf, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_29.Add(self.button_launch_main_rosbag_play, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_29.Add(self.button_kill_main_rosbag_play, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_29.Add(self.button_pause_main_rosbag_play, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_37.Add(sizer_29, 0, wx.ALL | wx.EXPAND, 4)
		sizer_37.Add(self.button_main_rosbag_record, 0, wx.LEFT | wx.RIGHT | wx.EXPAND, 4)
		sizer_19.Add(sizer_37, 0, wx.EXPAND, 0)
		sizer_43.Add(sizer_19, 0, wx.ALL | wx.EXPAND, 4)
		sizer_58.Add(self.button_sensor, 0, wx.EXPAND, 0)
		sizer_58.Add(self.button_map, 0, wx.EXPAND, 0)
		sizer_58.Add(self.button_perception, 0, wx.EXPAND, 0)
		sizer_58.Add(self.button_planning, 0, wx.EXPAND, 0)
		sizer_58.Add(self.button_control, 0, wx.EXPAND, 0)
		sizer_47.Add(sizer_58, 0, wx.EXPAND, 0)
		sizer_20.Add(self.label_gnss_stat, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_20.Add(self.label_map_stat, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_20.Add(self.label_ndt_stat, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_20.Add(self.label_lf_stat, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_47.Add(sizer_20, 1, wx.EXPAND, 0)
		sizer_58_copy.Add(self.button_drive, 0, wx.EXPAND, 0)
		sizer_58_copy.Add(self.button_clear, 0, wx.EXPAND, 0)
		sizer_47.Add(sizer_58_copy, 0, wx.EXPAND, 0)
		sizer_43.Add(sizer_47, 0, wx.ALL | wx.EXPAND, 4)
		self.notebook_1_pane_1.SetSizer(sizer_43)
		self.notebook_1_pane_2.SetSizer(sizer_4)
		sizer_27.Add(self.tree_ctrl_0, 1, wx.EXPAND, 0)
		sizer_27.Add(self.tree_ctrl_1, 1, wx.EXPAND, 0)
		sizer_27.Add(self.tree_ctrl_2, 1, wx.EXPAND, 0)
		sizer_10.Add(sizer_27, 1, wx.EXPAND, 0)
		sizer_10.Add(self.button_refresh, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		self.notebook_1_pane_3.SetSizer(sizer_10)
		sizer_12.Add(self.tree_ctrl_data, 1, wx.EXPAND, 0)
		sizer_12.Add(self.button_refresh_data, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_11.Add(sizer_12, 1, wx.EXPAND, 0)
		sizer_18.Add(self.text_ctrl_query, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_18.Add(self.button_query, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_17.Add(sizer_18, 0, wx.EXPAND, 0)
		sizer_17.Add(self.list_ctrl_sql, 1, wx.ALL | wx.EXPAND, 4)
		sizer_17.Add((85, 29), 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_11.Add(sizer_17, 1, wx.EXPAND, 0)
		self.notebook_1_pane_4.SetSizer(sizer_11)
		sizer_33.Add(self.panel_sensing, 1, wx.EXPAND, 0)
		sizer_24.Add(self.checkbox_auto_probe, 0, wx.LEFT | wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_24.Add(self.button_probe, 0, wx.LEFT | wx.TOP | wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_24.Add(self.button_calibration, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_33.Add(sizer_24, 0, wx.EXPAND, 0)
		sizer_5.Add(sizer_33, 0, wx.EXPAND, 0)
		sizer_25.Add(self.panel_points_image, 0, wx.EXPAND, 0)
		sizer_25.Add(self.button_points_image, 0, wx.ALL | wx.EXPAND, 4)
		sizer_7.Add(sizer_25, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 20)
		sizer_25_copy.Add(self.panel_scan_image, 0, wx.EXPAND, 0)
		sizer_25_copy.Add(self.button_scan_image, 0, wx.ALL | wx.EXPAND, 4)
		sizer_7.Add(sizer_25_copy, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 20)
		sizer_25_copy_copy_1.Add(self.panel_virtual_scan_image, 0, wx.EXPAND, 0)
		sizer_25_copy_copy_1.Add(self.button_virtual_scan_image, 0, wx.ALL | wx.EXPAND, 4)
		sizer_7.Add(sizer_25_copy_copy_1, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 20)
		sizer_25_copy_copy_2.Add(self.panel_camera_extrinsicMat_Publisher, 0, wx.EXPAND, 0)
		sizer_25_copy_copy_2.Add(self.button_camera_extrinsicMat_Publisher, 0, wx.ALL | wx.EXPAND, 4)
		sizer_7.Add(sizer_25_copy_copy_2, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 20)
		sizer_5.Add(sizer_7, 1, wx.ALL | wx.EXPAND, 4)
		self.notebook_1_pane_5.SetSizer(sizer_5)
		sizer_9.Add(self.panel_simulation, 1, wx.EXPAND, 0)
		sizer_9.Add(self.checkbox_point_map_update, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_5_copy.Add(sizer_9, 1, wx.EXPAND, 0)
		sizer_7_copy.Add(self.button_launch_rosbag_record, 0, wx.LEFT | wx.RIGHT | wx.TOP | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_28_copy_copy.Add(self.text_ctrl_file_rosbag_play, 1, wx.LEFT | wx.TOP, 4)
		sizer_28_copy_copy.Add(self.button_ref_file_rosbag_play, 0, wx.LEFT | wx.RIGHT | wx.TOP, 4)
		sizer_25_copy_copy.Add(sizer_28_copy_copy, 0, wx.EXPAND, 0)
		sizer_8.Add(self.button_launch_rosbag_play, 0, wx.ALL, 4)
		sizer_8.Add(self.button_kill_rosbag_play, 0, wx.ALL, 4)
		sizer_8.Add(self.button_pause_rosbag_play, 0, wx.ALL, 4)
		sizer_25_copy_copy.Add(sizer_8, 0, wx.EXPAND, 0)
		sizer_8_copy_3.Add(self.label_4, 0, wx.LEFT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_8_copy_3.Add(self.text_ctrl_rate_rosbag_play, 0, wx.LEFT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_25_copy_copy.Add(sizer_8_copy_3, 0, wx.EXPAND, 0)
		sizer_8_copy_2.Add(self.checkbox_clock_rosbag_play, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_8_copy_2.Add(self.checkbox_sim_time, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_25_copy_copy.Add(sizer_8_copy_2, 0, wx.EXPAND, 0)
		sizer_7_copy.Add(sizer_25_copy_copy, 0, wx.LEFT | wx.RIGHT | wx.TOP | wx.EXPAND, 4)
		sizer_28_copy_copy_copy.Add(self.text_ctrl_pmap, 1, wx.LEFT | wx.TOP, 4)
		sizer_28_copy_copy_copy.Add(self.button_ref_pmap, 0, wx.LEFT | wx.RIGHT | wx.TOP, 4)
		sizer_25_copy_copy_copy.Add(sizer_28_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_8_copy.Add(self.button_launch_pmap, 0, wx.ALL, 4)
		sizer_8_copy.Add(self.button_kill_pmap, 0, wx.ALL, 4)
		sizer_25_copy_copy_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
		sizer_7_copy.Add(sizer_25_copy_copy_copy, 0, wx.LEFT | wx.RIGHT | wx.TOP | wx.EXPAND, 4)
		sizer_25_copy_copy_copy_copy.Add(self.panel_vmap_prm, 1, wx.EXPAND, 0)
		sizer_8_copy_copy.Add(self.button_launch_vmap, 0, wx.ALL, 4)
		sizer_8_copy_copy.Add(self.button_kill_vmap, 0, wx.ALL, 4)
		sizer_25_copy_copy_copy_copy.Add(sizer_8_copy_copy, 0, wx.EXPAND, 0)
		sizer_7_copy.Add(sizer_25_copy_copy_copy_copy, 0, wx.LEFT | wx.RIGHT | wx.TOP | wx.EXPAND, 4)
		sizer_28_copy_copy_copy_copy_copy_copy.Add(self.panel_trajectory_prm, 1, wx.EXPAND, 0)
		sizer_25_copy_copy_copy_copy_copy_copy.Add(sizer_28_copy_copy_copy_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_8_copy_copy_copy.Add(self.button_launch_trajectory, 0, wx.ALL, 4)
		sizer_8_copy_copy_copy.Add(self.button_kill_trajectory, 0, wx.ALL, 4)
		sizer_25_copy_copy_copy_copy_copy_copy.Add(sizer_8_copy_copy_copy, 0, wx.EXPAND, 0)
		sizer_7_copy.Add(sizer_25_copy_copy_copy_copy_copy_copy, 0, wx.ALL | wx.EXPAND, 4)
		self.panel_3.SetSizer(sizer_7_copy)
		sizer_5_copy.Add(self.panel_3, 0, wx.EXPAND, 0)
		self.tab_simulation.SetSizer(sizer_5_copy)
		self.panel_viewer.SetSizer(self.sizer_viewer)
		sizer_26.Add(self.panel_viewer, 1, wx.EXPAND, 0)
		self.tab_viewer.SetSizer(sizer_26)
		self.notebook_1.AddPage(self.notebook_1_pane_1, _("Main"))
		self.notebook_1.AddPage(self.notebook_1_pane_2, _("Actuation"))
		self.notebook_1.AddPage(self.notebook_1_pane_3, _("Computing"))
		self.notebook_1.AddPage(self.notebook_1_pane_4, _("Data"))
		self.notebook_1.AddPage(self.notebook_1_pane_5, _("Sensing"))
		self.notebook_1.AddPage(self.tab_simulation, _("Simulation"))
		self.notebook_1.AddPage(self.tab_viewer, _("Viewer"))
		self.sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
		self.SetSizer(self.sizer_1)
		self.sizer_1.Fit(self)
		self.Layout()
		# end wxGlade

	def OnNetConn(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnNetConn' not implemented!"
		event.Skip()

	def OnGear(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnGear' not implemented!"
		event.Skip()

	def OnProgManu(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnProgManu' not implemented!"
		event.Skip()

	def OnIndi(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnIndi' not implemented!"
		event.Skip()

	def OnRef(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRef' not implemented!"
		event.Skip()

	def OnLoadMap(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnLoadMap' not implemented!"
		event.Skip()

	def OnAliasSync(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnAliasSync' not implemented!"
		event.Skip()

	def OnSimTime(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnSimTime' not implemented!"
		event.Skip()

	def OnLaunchKill(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnLaunchKill' not implemented!"
		event.Skip()

	def OnLaunch(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnLaunch' not implemented!"
		event.Skip()

	def OnKill(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnKill' not implemented!"
		event.Skip()

	def OnPauseRosbagPlay(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnPauseRosbagPlay' not implemented!"
		event.Skip()

	def OnRosbagRecord(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRosbagRecord' not implemented!"
		event.Skip()

	def OnMainButton(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnMainButton' not implemented!"
		event.Skip()

	def OnDrive(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnDrive' not implemented!"
		event.Skip()

	def OnClear(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnClear' not implemented!"
		event.Skip()

	def OnRefresh(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnRefresh' not implemented!"
		event.Skip()

	def OnQuery(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnQuery' not implemented!"
		event.Skip()

	def OnAutoProbe(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnAutoProbe' not implemented!"
		event.Skip()

	def OnProbe(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnProbe' not implemented!"
		event.Skip()

	def OnPointMapUpdate(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnPointMapUpdate' not implemented!"
		event.Skip()

	def OnLaunchPmap(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnLaunchPmap' not implemented!"
		event.Skip()

	def OnKillPmap(self, event):  # wxGlade: MyFrame.<event_handler>
		print "Event handler 'OnKillPmap' not implemented!"
		event.Skip()

# end of class MyFrame

class MyDialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialog.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_2 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.radio_box = wx.RadioBox(self.panel_2, wx.ID_ANY, "", choices=[_("0"), _("1"), _("2"), _("3")], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialog.__set_properties
		self.SetSize((258, 212))
		self.radio_box.SetSelection(0)
		self.panel_2.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialog.__do_layout
		sizer_13 = wx.BoxSizer(wx.VERTICAL)
		sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_14.Add(self.radio_box, 1, wx.LEFT | wx.RIGHT | wx.TOP | wx.ALIGN_CENTER_HORIZONTAL, 4)
		self.panel_2.SetSizer(sizer_14)
		sizer_13.Add(self.panel_2, 1, wx.EXPAND, 0)
		sizer_15.Add(self.button_1, 0, wx.ALL, 4)
		sizer_15.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_13.Add(sizer_15, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_13)
		self.Layout()
		# end wxGlade

	def OnOk(self, event):  # wxGlade: MyDialog.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialog.<event_handler>
		print "Event handler 'OnCancel' not implemented!"
		event.Skip()

# end of class MyDialog

class MyDialogParam(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogParam.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_v = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogParam.__set_properties
		self.SetTitle(_("dialog_3"))
		self.SetSize((470, 300))
		self.panel_v.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogParam.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_31 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_v = wx.BoxSizer(wx.VERTICAL)
		self.panel_v.SetSizer(self.sizer_v)
		sizer_30.Add(self.panel_v, 1, wx.EXPAND, 0)
		sizer_31.Add(self.button_1, 0, wx.ALL, 4)
		sizer_31.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_30.Add(sizer_31, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_30)
		self.Layout()
		# end wxGlade

	def OnOk(self, event):  # wxGlade: MyDialogParam.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialogParam.<event_handler>
		print "Event handler 'OnCancel' not implemented!"
		event.Skip()

# end of class MyDialogParam

class MyDialogRosbagRecord(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogRosbagRecord.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.text_ctrl = wx.TextCtrl(self, wx.ID_ANY, "")
		self.button_ref = wx.Button(self, wx.ID_ANY, _("Ref"))
		self.button_start = wx.Button(self, wx.ID_ANY, _("Start"))
		self.button_stop = wx.Button(self, wx.ID_ANY, _("Stop"))
		self.panel_1 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.button_refresh = wx.Button(self, wx.ID_ANY, _("Refresh"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref)
		self.Bind(wx.EVT_BUTTON, self.OnStart, self.button_start)
		self.Bind(wx.EVT_BUTTON, self.OnStop, self.button_stop)
		self.Bind(wx.EVT_BUTTON, self.OnRefresh, self.button_refresh)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogRosbagRecord.__set_properties
		self.SetTitle(_("ROSBAG Record"))
		self.SetSize((300, 430))
		self.button_ref.SetMinSize((40, 29))
		self.panel_1.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogRosbagRecord.__do_layout
		sizer_41 = wx.BoxSizer(wx.VERTICAL)
		self.sizer_topic = wx.BoxSizer(wx.VERTICAL)
		sizer_44 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_1.Add(self.text_ctrl, 1, wx.LEFT | wx.TOP, 4)
		sizer_28_copy_1.Add(self.button_ref, 0, wx.LEFT | wx.RIGHT | wx.TOP, 4)
		sizer_41.Add(sizer_28_copy_1, 0, wx.EXPAND, 0)
		sizer_44.Add(self.button_start, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_44.Add(self.button_stop, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_41.Add(sizer_44, 0, wx.EXPAND, 0)
		self.panel_1.SetSizer(self.sizer_topic)
		sizer_41.Add(self.panel_1, 1, wx.EXPAND, 0)
		sizer_41.Add(self.button_refresh, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		self.SetSizer(sizer_41)
		self.Layout()
		# end wxGlade

	def OnRef(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnRef' not implemented!"
		event.Skip()

	def OnStart(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnStart' not implemented!"
		event.Skip()

	def OnStop(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnStop' not implemented!"
		event.Skip()

	def OnRefresh(self, event):  # wxGlade: MyDialogRosbagRecord.<event_handler>
		print "Event handler 'OnRefresh' not implemented!"
		event.Skip()

# end of class MyDialogRosbagRecord

class MyDialogLaneStop(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogLaneStop.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.button_red_light = wx.Button(self, wx.ID_ANY, _("Red Light"))
		self.button_green_light = wx.Button(self, wx.ID_ANY, _("Green Light"))
		self.sizer_3_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Traffic Light"))
		self.button_left_lane = wx.Button(self, wx.ID_ANY, _("<< Left Lane"))
		self.button_right_lane = wx.Button(self, wx.ID_ANY, _("Right Lane >>"))
		self.sizer_3_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Lane Change"))
		self.button_keep_at = wx.Button(self, wx.ID_ANY, _("Keep at"))
		self.text_keep_at = wx.TextCtrl(self, wx.ID_ANY, _("60"))
		self.label_1 = wx.StaticText(self, wx.ID_ANY, _("km/h"))
		self.button_stop_in = wx.Button(self, wx.ID_ANY, _("Stop in"))
		self.text_ctrl_stop_in = wx.TextCtrl(self, wx.ID_ANY, _("5.0"))
		self.label_1_copy = wx.StaticText(self, wx.ID_ANY, _("m"))
		self.sizer_6_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Currnet Lane"))
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnTrafficRedLight, self.button_red_light)
		self.Bind(wx.EVT_BUTTON, self.OnTrafficGreenLight, self.button_green_light)
		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogLaneStop.__set_properties
		self.SetTitle(_("lane_stop"))
		self.button_red_light.SetBackgroundColour(wx.Colour(255, 0, 0))
		self.button_green_light.SetBackgroundColour(wx.Colour(0, 255, 0))
		self.text_keep_at.SetMinSize((40, 27))
		self.text_ctrl_stop_in.SetMinSize((40, 27))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogLaneStop.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_31 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_v = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_6_staticbox.Lower()
		sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.VERTICAL)
		sizer_21_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
		self.sizer_3_copy_staticbox.Lower()
		sizer_3_copy = wx.StaticBoxSizer(self.sizer_3_copy_staticbox, wx.VERTICAL)
		self.sizer_3_staticbox.Lower()
		sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.VERTICAL)
		sizer_3.Add(self.button_red_light, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_3.Add(self.button_green_light, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_2.Add(sizer_3, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_3_copy.Add(self.button_left_lane, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_3_copy.Add(self.button_right_lane, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_2.Add(sizer_3_copy, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_21.Add(self.button_keep_at, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_21.Add(self.text_keep_at, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_21.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_6.Add(sizer_21, 0, wx.EXPAND, 0)
		sizer_21_copy.Add(self.button_stop_in, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		sizer_21_copy.Add(self.text_ctrl_stop_in, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_21_copy.Add(self.label_1_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		sizer_6.Add(sizer_21_copy, 0, wx.EXPAND, 0)
		sizer_2.Add(sizer_6, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
		self.sizer_v.Add(sizer_2, 1, wx.EXPAND, 0)
		sizer_30.Add(self.sizer_v, 1, wx.EXPAND, 0)
		sizer_31.Add(self.button_1, 0, wx.ALL, 4)
		sizer_31.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_30.Add(sizer_31, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_30)
		sizer_30.Fit(self)
		self.Layout()
		# end wxGlade

	def OnTrafficRedLight(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnTrafficRedLight' not implemented!"
		event.Skip()

	def OnTrafficGreenLight(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnTrafficGreenLight' not implemented!"
		event.Skip()

	def OnOk(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialogLaneStop.<event_handler>
		print "Event handler 'OnCancel' not implemented!"
		event.Skip()

# end of class MyDialogLaneStop

class MyDialogNdtSlam(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialogNdtSlam.__init__
		kwds["style"] = wx.CAPTION
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_v = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.static_line_1 = wx.StaticLine(self, wx.ID_ANY)
		self.text_ctrl_path = wx.TextCtrl(self, wx.ID_ANY, "")
		self.button_ref_path = wx.Button(self, wx.ID_ANY, _("Ref"))
		self.radio_btn_filter_resolution = wx.RadioButton(self, wx.ID_ANY, _("Filter Resolution"))
		self.text_ctrl_filter_resolution = wx.TextCtrl(self, wx.ID_ANY, _("0.2"))
		self.radio_btn_original = wx.RadioButton(self, wx.ID_ANY, _("Original"))
		self.button_3 = wx.Button(self, wx.ID_ANY, _("PCD OUTPUT"))
		self.static_line_2 = wx.StaticLine(self, wx.ID_ANY)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("Close"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnRef, self.button_ref_path)
		self.Bind(wx.EVT_RADIOBUTTON, self.OnRadio, self.radio_btn_filter_resolution)
		self.Bind(wx.EVT_RADIOBUTTON, self.OnRadio, self.radio_btn_original)
		self.Bind(wx.EVT_BUTTON, self.OnPcdOutput, self.button_3)
		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialogNdtSlam.__set_properties
		self.SetTitle(_("ndt_slam"))
		self.SetSize((352, 341))
		self.panel_v.SetScrollRate(10, 10)
		self.button_ref_path.SetMinSize((40, 29))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialogNdtSlam.__do_layout
		sizer_30 = wx.BoxSizer(wx.VERTICAL)
		sizer_48 = wx.BoxSizer(wx.VERTICAL)
		sizer_49 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_28_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_30.Add(self.panel_v, 1, wx.EXPAND, 0)
		sizer_30.Add(self.static_line_1, 0, wx.EXPAND, 0)
		sizer_28_copy_1.Add(self.text_ctrl_path, 1, wx.LEFT | wx.TOP, 4)
		sizer_28_copy_1.Add(self.button_ref_path, 0, wx.LEFT | wx.RIGHT | wx.TOP, 4)
		sizer_48.Add(sizer_28_copy_1, 0, wx.ALL | wx.EXPAND, 4)
		sizer_49.Add(self.radio_btn_filter_resolution, 0, wx.ALL, 4)
		sizer_49.Add(self.text_ctrl_filter_resolution, 0, wx.ALL, 4)
		sizer_49.Add(self.radio_btn_original, 0, wx.ALL, 4)
		sizer_48.Add(sizer_49, 0, wx.ALL | wx.EXPAND, 4)
		sizer_48.Add(self.button_3, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		sizer_30.Add(sizer_48, 0, wx.EXPAND, 0)
		sizer_30.Add(self.static_line_2, 0, wx.EXPAND, 0)
		sizer_30.Add(self.button_1, 0, wx.ALL | wx.ALIGN_CENTER_HORIZONTAL, 4)
		self.SetSizer(sizer_30)
		self.Layout()
		# end wxGlade

	def OnRef(self, event):  # wxGlade: MyDialogNdtSlam.<event_handler>
		print "Event handler 'OnRef' not implemented!"
		event.Skip()

	def OnRadio(self, event):  # wxGlade: MyDialogNdtSlam.<event_handler>
		print "Event handler 'OnRadio' not implemented!"
		event.Skip()

	def OnPcdOutput(self, event):  # wxGlade: MyDialogNdtSlam.<event_handler>
		print "Event handler 'OnPcdOutput' not implemented!"
		event.Skip()

	def OnOk(self, event):  # wxGlade: MyDialogNdtSlam.<event_handler>
		print "Event handler 'OnOk' not implemented!"
		event.Skip()

# end of class MyDialogNdtSlam
class MyApp(wx.App):
	def OnInit(self):
		wx.InitAllImageHandlers()
		frame_1 = MyFrame(None, wx.ID_ANY, "")
		self.SetTopWindow(frame_1)
		frame_1.Show()
		return 1

# end of class MyApp

if __name__ == "__main__":
	gettext.install("app") # replace with the appropriate catalog name

	app = MyApp(0)
	app.MainLoop()